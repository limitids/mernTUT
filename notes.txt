backend has all the server code

server.js is server entrypoint

.gitignore to ignore files

npm init to start server 

PACKAGES: express, dotenv, mongoose,colors

npm i -D nodemon to instantly update server on change 

Start and server in scripts to represent node commands 

Postman helps with viewing an api and testing it <-- GOOOODDD

best practice to make controller

must use middleware to translate body data 

middleware = functions that execute during request

controllers dealing with mongoose must use async functions

collections in mongodb basically objects in relational databases

used atlas cluster in tut 

can also use mongodb compass desktop app to manage db easily 

when configuring with compas use string with "mongodb+srv://limitids:<PASSWORD>@cluster0.hxeej.mongodb.net/<APPNAME>"

EX: mongodb+srv://limitids:Danger7282@cluster0.hxeej.mongodb.net/mernapp

to connect to app: use string to as env variable MONGO_URI

config folder use to store configuration of app such as connecting a database

model folder used to show schemas for objects. same as dj

Model.find  gets a specific model by param or all 

model.create creates a model with given params 

model.findbyidandupdate(id,content,extraParams) updates an object

models.findbyid and then model.remove to delete specific models 

